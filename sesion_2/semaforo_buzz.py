# -*- coding: utf-8 -*-
"""Semaforo_Buzz.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jmhbOOM4Qj5J24PR4GCXHRuabJw6WAfx

Semáforo vehicular + cruce peatonal (FSM, antirrebote y buzzer)

Objetivos:

Diseñar una máquina de estados finitos (FSM).

Usar antirrebote por software para el botón peatonal.

Generar alerta acústica con PWM (buzzer).

Materiales: 3 LEDs (rojo, amarillo, verde), 1 LED peatonal, 1 botón, 1 buzzer activo/pasivo, resistencias 220–330Ω, jumpers, protoboard.

Conexiones (ejemplo BCM):

Vehículo: rojo=22, amarillo=27, verde=17

Peatón: LED=23

Botón peatón=18 (pull-down)

Buzzer=24
"""

import RPi.GPIO as GPIO, time

GPIO.setmode(GPIO.BCM)
LED_R, LED_Y, LED_G = 22, 27, 17
LED_P, BTN, BUZ = 23, 18, 24

for p in [LED_R, LED_Y, LED_G, LED_P, BUZ]:
    GPIO.setup(p, GPIO.OUT)
GPIO.setup(BTN, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)

pwm = GPIO.PWM(BUZ, 1000)  # 1 kHz tono simple
pwm.stop()

def set_vehiculo(r, y, g):
    GPIO.output(LED_R, r)
    GPIO.output(LED_Y, y)
    GPIO.output(LED_G, g)

def peaton(cruzando):
    GPIO.output(LED_P, cruzando)

def beep(t=0.2):
    pwm.start(50); time.sleep(t); pwm.stop()

try:
    estado = "VERDE"
    t0 = time.time()
    while True:
        # Lectura con antirrebote simple
        if GPIO.input(BTN) and estado == "VERDE":
            time.sleep(0.05)
            if GPIO.input(BTN):
                estado = "AMARILLO"

        if estado == "VERDE":
            set_vehiculo(0,0,1); peaton(0)
            if time.time()-t0 > 8:  # ciclo auto
                estado = "AMARILLO"; t0 = time.time()

        elif estado == "AMARILLO":
            set_vehiculo(0,1,0); peaton(0)
            time.sleep(2)
            estado = "ROJO_PEATON"; t0 = time.time()

        elif estado == "ROJO_PEATON":
            set_vehiculo(1,0,0); peaton(1)
            beep(0.1)  # aviso inicio cruce
            # parpadeo peatonal final
            if time.time()-t0 > 6:
                for _ in range(6):
                    GPIO.output(LED_P, 0); time.sleep(0.25)
                    GPIO.output(LED_P, 1); time.sleep(0.25)
                estado = "VERDE"; t0 = time.time()

        time.sleep(0.05)
except KeyboardInterrupt:
    pass
finally:
    pwm.stop(); GPIO.cleanup()